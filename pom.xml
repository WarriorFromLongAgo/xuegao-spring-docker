<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.xuegao</groupId>
    <artifactId>xuegao-spring-docker</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>xuegao-spring-docker</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <!-- 仓库地域 -->
        <docker.region>registry.cn-shenzhen.aliyuncs.com</docker.region>
        <!-- 仓库命名空间 -->
        <docker.namespace>kind-demo</docker.namespace>
        <!-- 仓库名称 -->
        <docker.registry>xuegao-spring-boot-kind</docker.registry>
        <docker.username>tb280830171ali云</docker.username>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <version>2.5.6</version>-->
<!--                <configuration>-->
<!--                    <image>-->
<!--                        <name>${docker.region}/${docker.namespace}/${docker.registry}/${project.artifactId}:${project.version}</name>-->
<!--                        &lt;!&ndash; 执行完build 自动push &ndash;&gt;-->
<!--                        <publish>true</publish>-->
<!--                    </image>-->
<!--                    &lt;!&ndash;配置构建宿主机信息，本机不用配置&ndash;&gt;-->
<!--                    <docker>-->
<!--                        <host>${docker.region}</host>-->
<!--                        &lt;!&ndash;如果使用https协议需要设置为true&ndash;&gt;-->
<!--                        <tlsVerify>false</tlsVerify>-->
<!--                        <publishRegistry>-->
<!--                            <username>tb280830171ali云</username>-->
<!--                            <password>qq23612244896</password>-->
<!--                            <url>${docker.region}</url>-->
<!--                        </publishRegistry>-->
<!--                    </docker>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <!-- Jib插件 -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.1.4</version>
                <configuration>
                    <!-- 拉取所需的基础镜像 - 这里用于运行springboot项目 -->
                    <from>
                        <image>openjdk:alpine</image>
                    </from>
                    <!-- 最后生成的镜像配置 -->
                    <to>
                        <!-- push到阿里云镜像仓库，如果是其它镜像仓库，将下面地址替换掉即可，ex: `Docker Hub` 的 `docker.io/zhengqing/xxx` -->
                        <image>${docker.region}/${docker.namespace}/${docker.registry}/${project.artifactId}:${project.version}</image>
                        <!-- 镜像版本号 -->
                        <!--<tags>-->
                        <!--<tag>v1</tag>-->
                        <!--</tags>-->
                        <auth>
                            <!--在阿里云上的账号和密码-->
                            <username>tb280830171ali云</username>-->
                            <password>qq23612244896</password>-->
                        </auth>
                    </to>
                    <container>
                        <ports>
                            <!--指定镜像端口 , 这里没用 docfile 的操作-->
                            <port>9000</port>
                        </ports>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
